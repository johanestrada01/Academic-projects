---------------------------------------------------------------------------ActoresI---------------------------------------------------------------------------
--Encargado
CREATE OR REPLACE PACKAGE PK_ENCARGADO AS
    --mantenerCompra
    PROCEDURE ComprasAd(NnombreOficina COMPRAS.nombreOficina%TYPE);
    PROCEDURE ComprasEl(Onumero COMPRAS.numero%TYPE);
    PROCEDURE LineasCompraAd(NidBien LINEASCOMPRAS.idBien%TYPE, NnumeroCompra LINEASCOMPRAS.numeroCompra%TYPE, Ncantidad LINEASCOMPRAS.cantidad%TYPE);
    --mantenerBien
    PROCEDURE Bienes_ServiciosAd(NidServicio SERVICIOS.idServicio%TYPE, Nprecio SERVICIOS.precio%TYPE, Nnombre SERVICIOS.nombre%TYPE, NfechaPago SERVICIOS.fechaPago%TYPE, Nestado SERVICIOS.estado%TYPE, NidBien BIENESOFRECIDOS.idBien%TYPE, Nproveedor BIENESOFRECIDOS.idproveedor%TYPE);
    PROCEDURE Bienes_ProductosAd(NidProducto PRODUCTOS.idProducto%TYPE, Nprecio PRODUCTOS.precio%TYPE, Nnombre PRODUCTOS.nombre%TYPE, NunidadesActuales PRODUCTOS.unidadesActuales%TYPE,NidBien BIENESOFRECIDOS.idBien%TYPE, Nproveedor BIENESOFRECIDOS.idproveedor%TYPE);
    PROCEDURE Bienes_ServiciosMo(OidServicio SERVICIOS.idServicio%TYPE, Nprecio SERVICIOS.precio%TYPE, NfechaPago SERVICIOS.fechaPago%TYPE, Nestado SERVICIOS.estado%TYPE);
    PROCEDURE Bienes_ProductosMo(OidProducto PRODUCTOS.idProducto%TYPE, Nprecio PRODUCTOS.precio%TYPE, NunidadesActuales PRODUCTOS.unidadesActuales%TYPE);
    PROCEDURE Bienes_ServiciosEl(OidServicio SERVICIOS.idServicio%TYPE);
    PROCEDURE Bienes_ProductosEl(OidProducto PRODUCTOS.idProducto%TYPE);
    --mantenerProveedor
    PROCEDURE PROVEEDORESAD(NOMBRE_AD PROVEEDORES.NOMBRE%TYPE, DIRECCION_AD PROVEEDORES.DIRECCION%TYPE, CORREO_AD PROVEEDORES.CORREO%TYPE);
    PROCEDURE PROVEEDORESMO(N_DIRECCION PROVEEDORES.DIRECCION%TYPE, N_CORREO PROVEEDORES.CORREO%TYPE, ID_MO PROVEEDORES.ID%TYPE);
    PROCEDURE PROVEEDORESEL(ID_PROVEEDOR PROVEEDORES.ID%TYPE);
    --mantenerCarpeta
    PROCEDURE CARPETASAD(NOMBREOFICINA_AD CARPETAS.nombreOficina%TYPE, DESCRIPCION_AD CARPETAS.descripcion%TYPE, ESTADO_AD CARPETAS.estado%TYPE);
    PROCEDURE CARPETASMO(N_NOMBREOFICINA CARPETAS.nombreOficina%TYPE, N_NUMEROCARPETAS CARPETAS.numeroCarpetas%TYPE, N_DESCRIPCION CARPETAS.descripcion%TYPE, N_ESTADO CARPETAS.estado%TYPE, ID_MO CARPETAS.idcarpeta%TYPE);
    PROCEDURE CARPETASEL(ID_CARPETA CARPETAS.idcarpeta%TYPE);
    --consultas
    FUNCTION ConsultaBien (CnombreOficina IN VARCHAR) RETURN SYS_REFCURSOR;
    FUNCTION ConsultaPresupuesto (Cnombre IN VARCHAR) RETURN SYS_REFCURSOR;
    FUNCTION ConsultaOrganizacion (CidOrganizacion IN INT) RETURN SYS_REFCURSOR;
    FUNCTION ConsultaCarpeta(CidCarpeta IN INT) RETURN SYS_REFCURSOR;
END PK_ENCARGADO;
/
CREATE OR REPLACE PACKAGE BODY PK_ENCARGADO IS
    --mantenerCompra
    PROCEDURE ComprasAd(NnombreOficina COMPRAS.nombreOficina%TYPE) IS
        BEGIN  
            INSERT INTO COMPRAS (nombreOficina) VALUES (NnombreOficina);
    END ComprasAd;
    PROCEDURE ComprasEl(Onumero COMPRAS.numero%TYPE) IS
        BEGIN
            DELETE FROM COMPRAS WHERE numero = Onumero;
    END ComprasEl;
    PROCEDURE LineasCompraAd(NidBien LINEASCOMPRAS.idBien%TYPE, NnumeroCompra LINEASCOMPRAS.numeroCompra%TYPE, Ncantidad LINEASCOMPRAS.cantidad%TYPE) IS
        BEGIN
            INSERT INTO LINEASCOMPRAS(idBien, numeroCompra, cantidad) VALUES (NidBien, NnumeroCompra, Ncantidad);
    END LineasCompraAd;
    --mantenerBien
    PROCEDURE Bienes_ServiciosAd(NidServicio SERVICIOS.idServicio%TYPE, Nprecio SERVICIOS.precio%TYPE, Nnombre SERVICIOS.nombre%TYPE, NfechaPago SERVICIOS.fechaPago%TYPE, Nestado SERVICIOS.estado%TYPE, NidBien BIENESOFRECIDOS.idBien%TYPE, Nproveedor BIENESOFRECIDOS.idproveedor%TYPE) IS
        BEGIN
            INSERT INTO SERVICIOS (idServicio, precio, nombre, fechaPago, estado) VALUES (NidServicio, Nprecio, Nnombre, NfechaPago, Nestado);
            INSERT INTO BIENESOFRECIDOS (idBien, idServicio, idProducto, idProveedor) VALUES (NidBien, NidServicio, NULL, Nproveedor);
    END Bienes_ServiciosAd;
    PROCEDURE Bienes_ProductosAd(NidProducto PRODUCTOS.idProducto%TYPE, Nprecio PRODUCTOS.precio%TYPE, Nnombre PRODUCTOS.nombre%TYPE, NunidadesActuales PRODUCTOS.unidadesActuales%TYPE,NidBien BIENESOFRECIDOS.idBien%TYPE, Nproveedor BIENESOFRECIDOS.idproveedor%TYPE) IS
        BEGIN
            INSERT INTO PRODUCTOS (idProducto, precio, nombre, unidadesActuales) VALUES (NidProducto, Nprecio, Nnombre, NunidadesActuales);
            INSERT INTO BIENESOFRECIDOS (idBien, idServicio, idProducto, idProveedor) VALUES (NidBien, Null, NidProducto, Nproveedor);
    END Bienes_ProductosAd;
    PROCEDURE Bienes_ServiciosMo(OidServicio SERVICIOS.idServicio%TYPE, Nprecio SERVICIOS.precio%TYPE, NfechaPago SERVICIOS.fechaPago%TYPE, Nestado SERVICIOS.estado%TYPE) IS
        BEGIN
            UPDATE SERVICIOS SET precio = Nprecio, fechaPago = NfechaPago, estado = Nestado WHERE idServicio = OidServicio;
    END Bienes_ServiciosMo;
    PROCEDURE Bienes_ProductosMo(OidProducto PRODUCTOS.idProducto%TYPE, Nprecio PRODUCTOS.precio%TYPE, NunidadesActuales PRODUCTOS.unidadesActuales%TYPE) IS
        BEGIN
            UPDATE PRODUCTOS SET precio = Nprecio, unidadesActuales = NunidadesActuales WHERE idProducto = OidProducto;
    END Bienes_ProductosMo;
    PROCEDURE Bienes_ServiciosEl(OidServicio SERVICIOS.idServicio%TYPE) IS
        BEGIN
            DELETE FROM SERVICIOS WHERE idServicio = OidServicio;
            DELETE FROM BIENESOFRECIDOS WHERE idServicio = OidServicio;
    END Bienes_ServiciosEl;
    PROCEDURE Bienes_ProductosEl(OidProducto PRODUCTOS.idProducto%TYPE) IS
        BEGIN
            DELETE FROM PRODUCTOS WHERE idProducto = OidProducto;
            DELETE FROM BIENESOFRECIDOS WHERE idProducto = OidProducto;
    END Bienes_ProductosEl;
    --mantenerProveedor
    PROCEDURE PROVEEDORESAD(NOMBRE_AD PROVEEDORES.NOMBRE%TYPE, DIRECCION_AD PROVEEDORES.DIRECCION%TYPE, CORREO_AD PROVEEDORES.CORREO%TYPE) IS
    BEGIN
        INSERT INTO PROVEEDORES(NOMBRE, ID, DIRECCION, CORREO) VALUES(NOMBRE_AD, 1, DIRECCION_AD, CORREO_AD);
    END PROVEEDORESAD;
    PROCEDURE PROVEEDORESMO(N_DIRECCION PROVEEDORES.DIRECCION%TYPE, N_CORREO PROVEEDORES.CORREO%TYPE, ID_MO PROVEEDORES.ID%TYPE) IS
        BEGIN
        UPDATE PROVEEDORES SET DIRECCION=N_DIRECCION, CORREO=N_CORREO WHERE ID=ID_MO;
    END PROVEEDORESMO;
    PROCEDURE PROVEEDORESEL(ID_PROVEEDOR PROVEEDORES.ID%TYPE) IS
        BEGIN
        DELETE FROM PROVEEDORES WHERE ID_PROVEEDOR=ID;
    END PROVEEDORESEL;
    --mantenerCarpeta
    PROCEDURE CARPETASAD(NOMBREOFICINA_AD CARPETAS.nombreOficina%TYPE, DESCRIPCION_AD CARPETAS.descripcion%TYPE, ESTADO_AD CARPETAS.estado%TYPE) IS
        BEGIN
            INSERT INTO CARPETAS(IDCARPETA, NOMBREOFICINA, NUMEROCARPETAS, ESTADO) VALUES(1, NOMBREOFICINA_AD, 1, ESTADO_AD);
    END CARPETASAD;
    PROCEDURE CARPETASMO(N_NOMBREOFICINA CARPETAS.nombreOficina%TYPE, N_NUMEROCARPETAS CARPETAS.numeroCarpetas%TYPE, N_DESCRIPCION CARPETAS.descripcion%TYPE, N_ESTADO CARPETAS.estado%TYPE, ID_MO CARPETAS.idcarpeta%TYPE) IS
        BEGIN
            UPDATE CARPETAS SET CARPETAS.NOMBREOFICINA=N_NOMBREOFICINA, NUMEROCARPETAS=N_NUMEROCARPETAS, DESCRIPCION=N_DESCRIPCION, ESTADO=N_ESTADO;
        END CARPETASMO;
    PROCEDURE CARPETASEL(ID_CARPETA CARPETAS.idcarpeta%TYPE) IS
        BEGIN
            DELETE FROM CARPETAS WHERE IDCARPETA=ID_CARPETA;
    END CARPETASEL;
    --Consultas
    FUNCTION ConsultaBien (CnombreOficina IN VARCHAR) RETURN SYS_REFCURSOR IS
        TABLE_CB SYS_REFCURSOR;
        TABLE_CP SYS_REFCURSOR;
        BEGIN
            OPEN TABLE_CP FOR SELECT BIENESOFRECIDOS.idBien, LINEASCOMPRAS.cantidad, SERVICIOS.nombre, PRODUCTOS.nombre, PROVEEDORES.nombre FROM COMPRAS
                JOIN LINEASCOMPRAS ON (LINEASCOMPRAS.numeroCompra=COMPRAS.NUMERO)
                JOIN BIENESOFRECIDOS ON (BIENESOFRECIDOS.idBien = LINEASCOMPRAS.idBien)
                JOIN SERVICIOS ON (SERVICIOS.idServicio = BIENESOFRECIDOS.idServicio)
                JOIN PRODUCTOS ON (PRODUCTOS.idProducto = BIENESOFRECIDOS.idProducto)
                JOIN PROVEEDORES ON (PROVEEDORES.id = BIENESOFRECIDOS.idProveedor)
                WHERE COMPRAS.nombreOficina = CnombreOficina;
            RETURN TABLE_CB;
    END ConsultaBien;
    FUNCTION ConsultaPresupuesto (Cnombre IN VARCHAR) RETURN SYS_REFCURSOR IS
        TABLE_CP SYS_REFCURSOR;
        BEGIN
            OPEN TABLE_CP FOR SELECT presupuesto, encargado FROM OFICINAS WHERE Cnombre = nombre;
            RETURN TABLE_CP;
    END ConsultaPresupuesto;
    FUNCTION ConsultaOrganizacion (CidOrganizacion IN INT) RETURN SYS_REFCURSOR IS
        TABLE_CORG SYS_REFCURSOR;
        BEGIN
            OPEN TABLE_CORG FOR SELECT ORGANIZACIONES.idOrganizacion, ORGANIZACIONES.nombre, ORGANIZACIONES.nit, ORGANIZACIONES.direccion, PROYECTOS.idProyecto, PROYECTOS.descripcion FROM ORGANIZACIONES JOIN PROYECTOS ON (PROYECTOS.idOrganizacion = ORGANIZACIONES.idOrganizacion) WHERE CidOrganizacion = ORGANIZACIONES.idOrganizacion;
            RETURN TABLE_CORG;
    END ConsultaOrganizacion;
    FUNCTION ConsultaCarpeta(CidCarpeta IN INT) RETURN SYS_REFCURSOR IS
        TABLE_CARPETAS SYS_REFCURSOR;
        BEGIN
            OPEN TABLE_CARPETAS FOR SELECT NOMBREOFICINA, NUMEROCARPETAS, DESCRIPCION, ESTADO FROM CARPETAS WHERE CidCarpeta=IDCARPETA;
            RETURN TABLE_CARPETAS;
    END CONSULTACARPETA;
END;
/

--Alcalde
CREATE OR REPLACE PACKAGE PK_ALCALDE IS
    PROCEDURE OficinasMo_(Onombre OFICINAS.nombre%TYPE, Npresupuesto OFICINAS.presupuesto%TYPE, Nencargado OFICINAS.encargado%TYPE);
    FUNCTION ConsultaOficina_ RETURN SYS_REFCURSOR;
    FUNCTION ConsultaPresupuesto_ (Cnombre IN VARCHAR) RETURN SYS_REFCURSOR;
END PK_ALCALDE;
/
CREATE OR REPLACE PACKAGE BODY PK_ALCALDE IS
    PROCEDURE OficinasMo_(Onombre OFICINAS.nombre%TYPE, Npresupuesto OFICINAS.presupuesto%TYPE, Nencargado OFICINAS.encargado%TYPE) IS
        BEGIN
            UPDATE OFICINAS SET presupuesto = Npresupuesto, encargado = Nencargado WHERE nombre = Onombre;
    END OficinasMo_;
    FUNCTION ConsultaOficina_ RETURN SYS_REFCURSOR IS
        TABLE_CO SYS_REFCURSOR;
        BEGIN
            OPEN TABLE_CO FOR SELECT * FROM OFICINAS;
            RETURN TABLE_CO;
    END ConsultaOficina_;
    FUNCTION ConsultaPresupuesto_ (Cnombre IN VARCHAR) RETURN SYS_REFCURSOR IS
        TABLE_CP SYS_REFCURSOR;
        BEGIN
            OPEN TABLE_CP FOR SELECT presupuesto, encargado FROM OFICINAS WHERE Cnombre = nombre;
            RETURN TABLE_CP;
    END ConsultaPresupuesto_;
END; 
/

--Empleado
CREATE OR REPLACE PACKAGE PC_EMPLEADO IS
    PROCEDURE ORGANIZACIONESAD_(NOMBRE_AD ORGANIZACIONES.NOMBRE%TYPE, NIT_AD ORGANIZACIONES.NIT%TYPE, DIRECCION_AD ORGANIZACIONES.DIRECCION%TYPE);
    PROCEDURE ORGANIZACIONESMO_(N_NOMBRE ORGANIZACIONES.NOMBRE%TYPE, N_DIRECCION ORGANIZACIONES.DIRECCION%TYPE, ID_MO ORGANIZACIONES.IDORGANIZACION%TYPE);
    PROCEDURE ORGANIZACIONESEL_(IDORGANIZACION_EL ORGANIZACIONES.IDORGANIZACION%TYPE);
    PROCEDURE CARPETAS_CONTRATOAD_(NOMBREOFICINA_AD CARPETAS.NOMBREOFICINA%TYPE, DESCRIPCION_AD CARPETAS.DESCRIPCION%TYPE, ESTADO_AD CARPETAS.ESTADO%TYPE, NUMEROCONTRATO_AD CONTRATOS.NUMEROCONTRATO%TYPE, OBJETO_AD CONTRATOS.OBJETO%TYPE, VALOR_AD CONTRATOS.VALOR%TYPE);
    PROCEDURE CARPETASMO_(N_NOMBREOFICINA CARPETAS.NOMBREOFICINA%TYPE, N_NUMEROCARPETAS CARPETAS.NUMEROCARPETAS%TYPE, N_DESCRIPCION CARPETAS.DESCRIPCION%TYPE, N_ESTADO CARPETAS.ESTADO%TYPE, ID_MO CARPETAS.IDCARPETA%TYPE);
    PROCEDURE CARPETASEL_(ID_CARPETA CARPETAS.IDCARPETA%TYPE);
    FUNCTION CONSULTARCARPETAS_(ID_CARPETA CARPETAS.IDCARPETA%TYPE) RETURN SYS_REFCURSOR;
    PROCEDURE PROYECTOSAD_(IDORGANIZACION_AD PROYECTOS.IDORGANIZACION%TYPE, NUMEROCONTRATO_AD PROYECTOS.NUMEROCONTRATO%TYPE, DESCRIPCION_AD PROYECTOS.DESCRIPCION%TYPE);
    PROCEDURE PROYECTOSMO_(N_FECHAFIN PROYECTOS.FECHAFIN%TYPE, N_DESCRIPCION PROYECTOS.DESCRIPCION%TYPE, IDPROYECTO_MO PROYECTOS.IDPROYECTO%TYPE);
    PROCEDURE PROYECTOSEL_(IDPROYECTO_EL PROYECTOS.IDPROYECTO%TYPE);
END PC_EMPLEADO;
/
CREATE OR REPLACE PACKAGE BODY PC_EMPLEADO IS
    PROCEDURE ORGANIZACIONESAD_(NOMBRE_AD ORGANIZACIONES.NOMBRE%TYPE, NIT_AD ORGANIZACIONES.NIT%TYPE, DIRECCION_AD ORGANIZACIONES.DIRECCION%TYPE) IS
        BEGIN
            INSERT INTO ORGANIZACIONES(IDORGANIZACION, NOMBRE, NIT, DIRECCION) VALUES(1, NOMBRE_AD, NIT_AD, DIRECCION_AD);
    END ORGANIZACIONESAD_;
    PROCEDURE  ORGANIZACIONESMO_(N_NOMBRE ORGANIZACIONES.NOMBRE%TYPE, N_DIRECCION ORGANIZACIONES.DIRECCION%TYPE, ID_MO ORGANIZACIONES.IDORGANIZACION%TYPE) IS
        BEGIN
            UPDATE ORGANIZACIONES SET NOMBRE=N_NOMBRE, DIRECCION=N_DIRECCION WHERE IDORGANIZACION=ID_MO;
    END ORGANIZACIONESMO_;
    PROCEDURE ORGANIZACIONESEL_(IDORGANIZACION_EL ORGANIZACIONES.IDORGANIZACION%TYPE) IS
        BEGIN
            DELETE FROM ORGANIZACIONES WHERE IDORGANIZACION=IDORGANIZACION_EL;
    END ORGANIZACIONESEL_;
    PROCEDURE CARPETAS_CONTRATOAD_(NOMBREOFICINA_AD CARPETAS.NOMBREOFICINA%TYPE, DESCRIPCION_AD CARPETAS.DESCRIPCION%TYPE, ESTADO_AD CARPETAS.ESTADO%TYPE, NUMEROCONTRATO_AD CONTRATOS.NUMEROCONTRATO%TYPE, OBJETO_AD CONTRATOS.OBJETO%TYPE, VALOR_AD CONTRATOS.VALOR%TYPE) IS
        aux_idcarpeta int;
        BEGIN
            INSERT INTO CARPETAS(IDCARPETA, NOMBREOFICINA, NUMEROCARPETAS, ESTADO) VALUES(1, NOMBREOFICINA_AD, 1, ESTADO_AD);
            SELECT COUNT(*) INTO aux_idcarpeta FROM CARPETAS; 
            INSERT INTO CONTRATOS(numeroContrato, idcarpeta, objeto, valor) VALUES(NUMEROCONTRATO_AD, aux_idcarpeta, OBJETO_AD, VALOR_AD);
    END CARPETAS_CONTRATOAD_;
    PROCEDURE CARPETASMO_(N_NOMBREOFICINA CARPETAS.NOMBREOFICINA%TYPE, N_NUMEROCARPETAS CARPETAS.NUMEROCARPETAS%TYPE, N_DESCRIPCION CARPETAS.DESCRIPCION%TYPE, N_ESTADO CARPETAS.ESTADO%TYPE, ID_MO CARPETAS.IDCARPETA%TYPE) IS
        BEGIN
            UPDATE CARPETAS SET NOMBREOFICINA=N_NOMBREOFICINA, NUMEROCARPETAS=N_NUMEROCARPETAS, DESCRIPCION=N_DESCRIPCION, ESTADO=N_ESTADO WHERE ID_MO=IDCARPETA;
    END CARPETASMO_;
    PROCEDURE CARPETASEL_(ID_CARPETA CARPETAS.IDCARPETA%TYPE) IS 
        BEGIN
            DELETE FROM CARPETAS WHERE IDCARPETA=ID_CARPETA;
    END CARPETASEL_;
    FUNCTION CONSULTARCARPETAS_(ID_CARPETA CARPETAS.IDCARPETA%TYPE) RETURN SYS_REFCURSOR IS
        TABLE_CARPETAS SYS_REFCURSOR;
        BEGIN
            OPEN TABLE_CARPETAS FOR SELECT NOMBREOFICINA, NUMEROCARPETAS, DESCRIPCION, ESTADO FROM CARPETAS WHERE ID_CARPETA=IDCARPETA;
            RETURN TABLE_CARPETAS;
    END CONSULTARCARPETAS_;  
    PROCEDURE PROYECTOSAD_(IDORGANIZACION_AD PROYECTOS.IDORGANIZACION%TYPE, NUMEROCONTRATO_AD PROYECTOS.NUMEROCONTRATO%TYPE, DESCRIPCION_AD PROYECTOS.DESCRIPCION%TYPE) IS
        BEGIN
        INSERT INTO PROYECTOS(IDPROYECTO, IDORGANIZACION, NUMEROCONTRATO, DESCRIPCION, FECHAINICIO) VALUES(1, IDORGANIZACION_AD, NUMEROCONTRATO_AD, DESCRIPCION_AD, SYSDATE);
    END PROYECTOSAD_;
    PROCEDURE PROYECTOSMO_(N_FECHAFIN PROYECTOS.FECHAFIN%TYPE, N_DESCRIPCION PROYECTOS.DESCRIPCION%TYPE, IDPROYECTO_MO PROYECTOS.IDPROYECTO%TYPE) IS
        BEGIN
        UPDATE PROYECTOS SET FECHAFIN=N_FECHAFIN, DESCRIPCION=N_DESCRIPCION WHERE IDPROYECTO=IDPROYECTO_MO;
    END PROYECTOSMO_;
    PROCEDURE PROYECTOSEL_(IDPROYECTO_EL PROYECTOS.IDPROYECTO%TYPE) IS
        BEGIN
        DELETE FROM PROYECTOS WHERE IDPROYECTO=IDPROYECTO_EL;
    END PROYECTOSEL_;
END;
/
-------------------------------------------Seguridad-------------------------------------------
CREATE ROLE Empleado NOT IDENTIFIED;
GRANT EXECUTE PC_EMPLEADO TO Empleado;

CREATE ROLE Alcalde NOT IDENTIFIED;
GRANT EXECUTE PK_ALCALDE TO Alcalde;

CREATE ROLE Encargado NOT IDENTIFIED;
GRANT EXECUTE ON PK_ENCARGADO TO Encargado;

-------------------------------------------XSeguridad-------------------------------------------
DROP PACKAGE PK_ENCARGADO;
DROP PACKAGE PK_ALCALDE;
DROP PACKAGE PC_EMPLEADO;

DROP ROLE Empleado;
DROP ROLE Alcalde;
DROP ROLE Encargado;